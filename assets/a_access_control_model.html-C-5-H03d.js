import{_ as l,c as i,a as r,o as e}from"./app-C0I8cG6z.js";const a={};function n(s,t){return e(),i("div",null,t[0]||(t[0]=[r('<h1 id="访问控制模型" tabindex="-1"><a class="header-anchor" href="#访问控制模型"><span>访问控制模型</span></a></h1><h2 id="一、rbac" tabindex="-1"><a class="header-anchor" href="#一、rbac"><span>一、RBAC</span></a></h2><h2 id="二、abac" tabindex="-1"><a class="header-anchor" href="#二、abac"><span>二、ABAC</span></a></h2><h2 id="三、dac" tabindex="-1"><a class="header-anchor" href="#三、dac"><span>三、DAC</span></a></h2><h2 id="四、mac" tabindex="-1"><a class="header-anchor" href="#四、mac"><span>四、MAC</span></a></h2><h2 id="五、对比总结" tabindex="-1"><a class="header-anchor" href="#五、对比总结"><span>五、对比总结</span></a></h2><p>访问控制模型用于管理用户对系统资源的访问权限。以下是 <strong>RBAC</strong> 与其他主流访问控制模型的对比：</p><table><thead><tr><th>模型</th><th>全称</th><th>核心概念</th><th>优点</th><th>缺点</th><th>适用场景</th></tr></thead><tbody><tr><td><strong>RBAC</strong> (Role-Based Access Control)</td><td>基于角色的访问控制</td><td>权限分配给角色，用户通过角色获取权限</td><td><li>权限管理简单</li><li>适合大规模用户</li><li>易于审计</li></td><td><li>灵活性较低</li><li>动态权限调整较复杂</li></td><td><li>企业信息系统</li><li>内部权限管理</li><li>固定权限体系</li></td></tr><tr><td><strong>ABAC</strong> (Attribute-Based Access Control)</td><td>基于属性的访问控制</td><td>权限由用户、资源、环境等属性动态决定</td><td><li>高度灵活</li><li>支持复杂策略</li><li>适合动态环境</li></td><td><li>实现复杂</li><li>管理成本高</li></td><td><li>云计算</li><li>动态权限需求</li><li>零信任架构</li></td></tr><tr><td><strong>DAC</strong> (Discretionary Access Control)</td><td>自主访问控制</td><td>资源所有者决定访问权限</td><td><li>简单易用</li><li>灵活性高</li></td><td><li>安全性较低</li><li>权限易失控</li></td><td><li>个人文件共享</li><li>小型系统</li></td></tr><tr><td><strong>MAC</strong> (Mandatory Access Control)</td><td>强制访问控制</td><td>系统强制实施访问策略，用户无法更改</td><td><li>安全性高</li><li>防止权限泄露</li></td><td><li>管理严格</li><li>灵活性差</li></td><td><li>军事系统</li><li>高安全需求场景</li></td></tr></tbody></table><h2 id="关键对比" tabindex="-1"><a class="header-anchor" href="#关键对比"><span><strong>关键对比</strong></span></a></h2><ol><li><p><strong>RBAC vs ABAC</strong></p><ul><li><strong>RBAC</strong> 适用于固定角色和权限结构（如企业部门权限）。</li><li><strong>ABAC</strong> 适用于动态权限需求（如云服务、IoT设备访问）。</li></ul></li><li><p><strong>RBAC vs DAC</strong></p><ul><li><strong>RBAC</strong> 由管理员统一管理，更安全。</li><li><strong>DAC</strong> 允许用户自主授权，灵活性高但安全性低。</li></ul></li><li><p><strong>RBAC vs MAC</strong></p><ul><li><strong>RBAC</strong> 适用于商业系统，灵活性较高。</li><li><strong>MAC</strong> 适用于高安全级别系统（如政府、军事），权限严格受限。</li></ul></li></ol><h2 id="如何选择" tabindex="-1"><a class="header-anchor" href="#如何选择"><span><strong>如何选择？</strong></span></a></h2><ul><li><strong>需要简单、可管理的权限体系</strong> → <strong>RBAC</strong></li><li><strong>需要动态、细粒度的权限控制</strong> → <strong>ABAC</strong></li><li><strong>需要高安全性，防止权限扩散</strong> → <strong>MAC</strong></li><li><strong>需要用户自主管理权限</strong> → <strong>DAC</strong></li></ul><p>RBAC 是最广泛使用的模型，但现代系统（如云平台）越来越多地采用 <strong>RBAC + ABAC 混合模式</strong> 以提高灵活性。</p>',13)]))}const d=l(a,[["render",n],["__file","a_access_control_model.html.vue"]]),c=JSON.parse('{"path":"/architecture/a_access_control_model.html","title":"访问控制模型","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、RBAC","slug":"一、rbac","link":"#一、rbac","children":[]},{"level":2,"title":"二、ABAC","slug":"二、abac","link":"#二、abac","children":[]},{"level":2,"title":"三、DAC","slug":"三、dac","link":"#三、dac","children":[]},{"level":2,"title":"四、MAC","slug":"四、mac","link":"#四、mac","children":[]},{"level":2,"title":"五、对比总结","slug":"五、对比总结","link":"#五、对比总结","children":[]},{"level":2,"title":"关键对比","slug":"关键对比","link":"#关键对比","children":[]},{"level":2,"title":"如何选择？","slug":"如何选择","link":"#如何选择","children":[]}],"git":{"updatedTime":1746017239000,"contributors":[{"name":"Clarence","username":"Clarence","email":"36807519+Clarence404@users.noreply.github.com","commits":2,"url":"https://github.com/Clarence"},{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":1,"url":"https://github.com/hello0709"},{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":2,"url":"https://github.com/Clarence"}]},"filePathRelative":"architecture/a_access_control_model.md"}');export{d as comp,c as data};

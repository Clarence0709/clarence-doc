import{_ as e,c as i,d as a,o as s}from"./app-CcQBZE3V.js";const n={};function t(p,l){return s(),i("div",null,l[0]||(l[0]=[a('<h1 id="java总结-数据库" tabindex="-1"><a class="header-anchor" href="#java总结-数据库"><span>Java总结-数据库</span></a></h1><h2 id="一、数据库的隔离级别" tabindex="-1"><a class="header-anchor" href="#一、数据库的隔离级别"><span>一、数据库的隔离级别？</span></a></h2><p>uncommited read</p><p>commited read</p><p>repeatable read</p><p>serializable read</p><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>MySQL 默认的隔离级别：Repeatable Read（可重读）级别。<br> Oracle 默认的隔离级别：Read Committed（读取已提交的）级别。</p></div><h2 id="二、索引失效的场景有哪些" tabindex="-1"><a class="header-anchor" href="#二、索引失效的场景有哪些"><span>二、索引失效的场景有哪些？</span></a></h2><ul><li><p>联合索引不满足最左匹配原则</p></li><li><p>索引列参与运算</p></li><li><p>索引列参使用了函数</p></li><li><p>错误的like查询使用</p></li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>此种情况其实就是<strong>最左匹配原则</strong>，如下情况：<br></p><p>模糊查询时（like语句），模糊匹配的占位符位于条件的首部。</p></div><ul><li>类型隐式转换</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>参数类型与字段类型不匹配，导致类型发生了隐式转换，索引失效。</p></div><ul><li>使用OR操作</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><ul><li><p>查询条件使用or关键字，其中一个字段没有创建索引，则会导致整个查询语句索引失效；</p></li><li><p>or两边为“&gt;”和“&lt;”范围查询时，索引失效。</p></li></ul></div><ul><li><p>两列做比较（等于和不等于比较）</p></li><li><p>查询条件为：is not null、not in和not exists</p></li><li><p>order by导致索引失效</p></li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>当查询条件涉及到order by、limit等条件时，是否走索引情况比较复杂，而且与Mysql版本有关:</p><ul><li><p>通常普通索引，如果未使用limit，则不会走索引。</p></li><li><p>order by多个索引字段时，可能不会走索引。</p></li><li><p>其他情况，建议在使用时进行explain验证。</p></li></ul></div><ul><li>参数不同导致索引失效</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>当查询条件为大于等于、in等范围查询时，根据查询结果占全表数据比例的不同，优化器有可能会放弃索引，进行全表扫描。</p></div><ul><li>Mysql优化器的其他优化策略</li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>比如优化器认为在某些情况下，全表扫描比走索引快，则它就会放弃索引</p></div><h2 id="三、mysql的存储引擎对比" tabindex="-1"><a class="header-anchor" href="#三、mysql的存储引擎对比"><span>三、Mysql的存储引擎对比</span></a></h2><h3 id="_1、myisam" tabindex="-1"><a class="header-anchor" href="#_1、myisam"><span>1、MyISAM</span></a></h3><p>（1）不支持事务，但是每次查询都是原子的；</p><p>（2）支持表级锁，即每次操作是对整个表加锁；</p><p>（3）存储表的总行数；</p><p>（4）一个 MYISAM 表有三个文件：索引文件、表结构文件、数据文件；</p><p>（5）采用菲聚集索引，索引文件的数据域存储指向数据文件的指针。辅索引与主索引基本一致，但是辅索引不用保证唯一性。</p><h3 id="_2、innodb" tabindex="-1"><a class="header-anchor" href="#_2、innodb"><span>2、InnoDb</span></a></h3><p>（1）支持 ACID 的事务，支持事务的四种隔离级别；</p><p>（2）支持行级锁及外键约束：因此可以支持写并发；</p><p>（3）不存储总行数：</p><p>（4）一个 InnoDb 引擎存储在一个文件空间（共享表空间，表大小不受操作系统控制，一个表可能分布在多个文件里），也有可能为多个 （设置为独立表空，表大小受操作系统文件大小限制，一般为 2G），受操作系统文件大小的限制；</p><p>（5）主键索引采用聚集索引（索引的数据域存储数据文件本身），辅索引的数据域存储主键的值；因此从辅索引查找数据，需要先通过辅 索引找到主键值，再访问辅索引；最好使用自增主键，防止插入数据时，为维持 B+树结构，文件的大调整。</p><h2 id="四、explain关键字的介绍" tabindex="-1"><a class="header-anchor" href="#四、explain关键字的介绍"><span>四、Explain关键字的介绍？</span></a></h2><h2 id="四、mysql的几种锁对比" tabindex="-1"><a class="header-anchor" href="#四、mysql的几种锁对比"><span>四、Mysql的几种锁对比？</span></a></h2><h3 id="_1、共享锁-s锁" tabindex="-1"><a class="header-anchor" href="#_1、共享锁-s锁"><span>1、共享锁（S锁）</span></a></h3><h3 id="_2、排他锁-x锁" tabindex="-1"><a class="header-anchor" href="#_2、排他锁-x锁"><span>2、排他锁（X锁）</span></a></h3><h2 id="五、mvcc原理、mysql是如何解决幻读的" tabindex="-1"><a class="header-anchor" href="#五、mvcc原理、mysql是如何解决幻读的"><span>五、MVCC原理、Mysql是如何解决幻读的？</span></a></h2><h2 id="六、mysql的几种日志" tabindex="-1"><a class="header-anchor" href="#六、mysql的几种日志"><span>六、Mysql的几种日志？</span></a></h2><h2 id="七、简述mysql的主从同步" tabindex="-1"><a class="header-anchor" href="#七、简述mysql的主从同步"><span>七、简述Mysql的主从同步？</span></a></h2><h3 id="_1、mysql-5-7之前" tabindex="-1"><a class="header-anchor" href="#_1、mysql-5-7之前"><span>1、Mysql 5.7之前：</span></a></h3><h3 id="_2、mysql-5-7之后" tabindex="-1"><a class="header-anchor" href="#_2、mysql-5-7之后"><span>2、Mysql 5.7之后：</span></a></h3><h2 id="mysql的执行流程" tabindex="-1"><a class="header-anchor" href="#mysql的执行流程"><span>Mysql的执行流程？</span></a></h2><h2 id="几个常见的影响mysql性能的案例" tabindex="-1"><a class="header-anchor" href="#几个常见的影响mysql性能的案例"><span>几个常见的影响MYSQL性能的案例？</span></a></h2>',44)]))}const r=e(n,[["render",t],["__file","3_db.html.vue"]]),c=JSON.parse('{"path":"/interview/3_db.html","title":"Java总结-数据库","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"一、数据库的隔离级别？","slug":"一、数据库的隔离级别","link":"#一、数据库的隔离级别","children":[]},{"level":2,"title":"二、索引失效的场景有哪些？","slug":"二、索引失效的场景有哪些","link":"#二、索引失效的场景有哪些","children":[]},{"level":2,"title":"三、Mysql的存储引擎对比","slug":"三、mysql的存储引擎对比","link":"#三、mysql的存储引擎对比","children":[{"level":3,"title":"1、MyISAM","slug":"_1、myisam","link":"#_1、myisam","children":[]},{"level":3,"title":"2、InnoDb","slug":"_2、innodb","link":"#_2、innodb","children":[]}]},{"level":2,"title":"四、Explain关键字的介绍？","slug":"四、explain关键字的介绍","link":"#四、explain关键字的介绍","children":[]},{"level":2,"title":"四、Mysql的几种锁对比？","slug":"四、mysql的几种锁对比","link":"#四、mysql的几种锁对比","children":[{"level":3,"title":"1、共享锁（S锁）","slug":"_1、共享锁-s锁","link":"#_1、共享锁-s锁","children":[]},{"level":3,"title":"2、排他锁（X锁）","slug":"_2、排他锁-x锁","link":"#_2、排他锁-x锁","children":[]}]},{"level":2,"title":"五、MVCC原理、Mysql是如何解决幻读的？","slug":"五、mvcc原理、mysql是如何解决幻读的","link":"#五、mvcc原理、mysql是如何解决幻读的","children":[]},{"level":2,"title":"六、Mysql的几种日志？","slug":"六、mysql的几种日志","link":"#六、mysql的几种日志","children":[]},{"level":2,"title":"七、简述Mysql的主从同步？","slug":"七、简述mysql的主从同步","link":"#七、简述mysql的主从同步","children":[{"level":3,"title":"1、Mysql 5.7之前：","slug":"_1、mysql-5-7之前","link":"#_1、mysql-5-7之前","children":[]},{"level":3,"title":"2、Mysql 5.7之后：","slug":"_2、mysql-5-7之后","link":"#_2、mysql-5-7之后","children":[]}]},{"level":2,"title":"Mysql的执行流程？","slug":"mysql的执行流程","link":"#mysql的执行流程","children":[]},{"level":2,"title":"几个常见的影响MYSQL性能的案例？","slug":"几个常见的影响mysql性能的案例","link":"#几个常见的影响mysql性能的案例","children":[]}],"git":{"updatedTime":1737452783000,"contributors":[{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":1,"url":"https://github.com/Clarence"},{"name":"hanchen","username":"hanchen","email":"1154937362@qq.com","commits":3,"url":"https://github.com/hanchen"}]},"filePathRelative":"interview/3_db.md"}');export{r as comp,c as data};

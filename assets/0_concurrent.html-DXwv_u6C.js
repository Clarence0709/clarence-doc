import{_ as a,c as n,a as r,o as c}from"./app-zR3SmXHV.js";const l={};function t(o,e){return c(),n("div",null,e[0]||(e[0]=[r('<h1 id="java并发" tabindex="-1"><a class="header-anchor" href="#java并发"><span>Java并发</span></a></h1><p>参考链接：<a href="https://gitee.com/Doocs/advanced-java#%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F" target="_blank" rel="noopener noreferrer">https://gitee.com/Doocs/advanced-java</a></p><h2 id="juc-atomic" tabindex="-1"><a class="header-anchor" href="#juc-atomic"><span>JUC - Atomic</span></a></h2><h2 id="juc-lock" tabindex="-1"><a class="header-anchor" href="#juc-lock"><span>JUC - LOCK</span></a></h2><h3 id="reentrantlock-可重入锁" tabindex="-1"><a class="header-anchor" href="#reentrantlock-可重入锁"><span>ReentrantLock（可重入锁）</span></a></h3><h3 id="countdownlatch-cyclicbarrier" tabindex="-1"><a class="header-anchor" href="#countdownlatch-cyclicbarrier"><span>CountDownLatch / CyclicBarrier</span></a></h3><h3 id="semaphore-信号量" tabindex="-1"><a class="header-anchor" href="#semaphore-信号量"><span>Semaphore（信号量）</span></a></h3><h3 id="blockingqueue-生产者-消费者模式" tabindex="-1"><a class="header-anchor" href="#blockingqueue-生产者-消费者模式"><span>BlockingQueue（生产者-消费者模式）</span></a></h3><h3 id="concurrenthashmap-并发容器" tabindex="-1"><a class="header-anchor" href="#concurrenthashmap-并发容器"><span>ConcurrentHashMap 并发容器</span></a></h3><h2 id="juc-fork-join" tabindex="-1"><a class="header-anchor" href="#juc-fork-join"><span>JUC - Fork/Join</span></a></h2><h3 id="fork-join-工作窃取算法" tabindex="-1"><a class="header-anchor" href="#fork-join-工作窃取算法"><span>Fork/Join 工作窃取算法</span></a></h3><h3 id="任务拆分与合并" tabindex="-1"><a class="header-anchor" href="#任务拆分与合并"><span>任务拆分与合并</span></a></h3><h2 id="juc-completablefuture-与异步编程" tabindex="-1"><a class="header-anchor" href="#juc-completablefuture-与异步编程"><span>JUC - CompletableFuture 与异步编程</span></a></h2><h3 id="future-vs-completablefuture" tabindex="-1"><a class="header-anchor" href="#future-vs-completablefuture"><span>Future vs CompletableFuture</span></a></h3><h3 id="异步任务组合" tabindex="-1"><a class="header-anchor" href="#异步任务组合"><span>异步任务组合</span></a></h3>',15)]))}const i=a(l,[["render",t],["__file","0_concurrent.html.vue"]]),s=JSON.parse('{"path":"/concurrent/0_concurrent.html","title":"Java并发","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"JUC - Atomic","slug":"juc-atomic","link":"#juc-atomic","children":[]},{"level":2,"title":"JUC - LOCK","slug":"juc-lock","link":"#juc-lock","children":[{"level":3,"title":"ReentrantLock（可重入锁）","slug":"reentrantlock-可重入锁","link":"#reentrantlock-可重入锁","children":[]},{"level":3,"title":"CountDownLatch / CyclicBarrier","slug":"countdownlatch-cyclicbarrier","link":"#countdownlatch-cyclicbarrier","children":[]},{"level":3,"title":"Semaphore（信号量）","slug":"semaphore-信号量","link":"#semaphore-信号量","children":[]},{"level":3,"title":"BlockingQueue（生产者-消费者模式）","slug":"blockingqueue-生产者-消费者模式","link":"#blockingqueue-生产者-消费者模式","children":[]},{"level":3,"title":"ConcurrentHashMap 并发容器","slug":"concurrenthashmap-并发容器","link":"#concurrenthashmap-并发容器","children":[]}]},{"level":2,"title":"JUC - Fork/Join","slug":"juc-fork-join","link":"#juc-fork-join","children":[{"level":3,"title":"Fork/Join 工作窃取算法","slug":"fork-join-工作窃取算法","link":"#fork-join-工作窃取算法","children":[]},{"level":3,"title":"任务拆分与合并","slug":"任务拆分与合并","link":"#任务拆分与合并","children":[]}]},{"level":2,"title":"JUC - CompletableFuture 与异步编程","slug":"juc-completablefuture-与异步编程","link":"#juc-completablefuture-与异步编程","children":[{"level":3,"title":"Future vs CompletableFuture","slug":"future-vs-completablefuture","link":"#future-vs-completablefuture","children":[]},{"level":3,"title":"异步任务组合","slug":"异步任务组合","link":"#异步任务组合","children":[]}]}],"git":{"updatedTime":1743345633000,"contributors":[{"name":"hanchen","username":"hanchen","email":"1154937362@qq.com","commits":4,"url":"https://github.com/hanchen"},{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":3,"url":"https://github.com/Clarence"},{"name":"hello0709","username":"hello0709","email":"1154937362@qq.com","commits":1,"url":"https://github.com/hello0709"}]},"filePathRelative":"concurrent/0_concurrent.md"}');export{i as comp,s as data};

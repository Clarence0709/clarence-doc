import{_ as a,c as l,a as n,o as r}from"./app-CnhRnMEE.js";const s={};function t(h,e){return r(),l("div",null,e[0]||(e[0]=[n('<h1 id="算法基础" tabindex="-1"><a class="header-anchor" href="#算法基础"><span>算法基础</span></a></h1><blockquote><p><a href="https://www.hello-algo.com/chapter_hello_algo/" target="_blank" rel="noopener noreferrer">参考网址：https://www.hello-algo.com/chapter_hello_algo/</a></p></blockquote><h2 id="复杂度分析" tabindex="-1"><a class="header-anchor" href="#复杂度分析"><span>复杂度分析</span></a></h2><h2 id="数组和链表" tabindex="-1"><a class="header-anchor" href="#数组和链表"><span>数组和链表</span></a></h2><h2 id="栈与队列" tabindex="-1"><a class="header-anchor" href="#栈与队列"><span>栈与队列</span></a></h2><h2 id="哈希表" tabindex="-1"><a class="header-anchor" href="#哈希表"><span>哈希表</span></a></h2><h2 id="树" tabindex="-1"><a class="header-anchor" href="#树"><span>树</span></a></h2><h3 id="平衡二叉树-adelson-velsky-and-landis-tree-avl" tabindex="-1"><a class="header-anchor" href="#平衡二叉树-adelson-velsky-and-landis-tree-avl"><span>平衡二叉树 (Adelson-Velsky and Landis Tree, AVL)</span></a></h3><h3 id="红黑树-balanced-binary-search-tree-bbst" tabindex="-1"><a class="header-anchor" href="#红黑树-balanced-binary-search-tree-bbst"><span>红黑树 (Balanced Binary Search Tree, BBST)</span></a></h3><h3 id="b-树-b-tree" tabindex="-1"><a class="header-anchor" href="#b-树-b-tree"><span>B 树（B Tree）</span></a></h3><h3 id="b-树-b-tree-1" tabindex="-1"><a class="header-anchor" href="#b-树-b-tree-1"><span>B+ 树（B+ Tree）</span></a></h3><h2 id="堆" tabindex="-1"><a class="header-anchor" href="#堆"><span>堆</span></a></h2><h2 id="图" tabindex="-1"><a class="header-anchor" href="#图"><span>图</span></a></h2>',13)]))}const d=a(s,[["render",t],["__file","0_base.html.vue"]]),c=JSON.parse('{"path":"/algorithm/0_base.html","title":"算法基础","lang":"en-US","frontmatter":{},"headers":[{"level":2,"title":"复杂度分析","slug":"复杂度分析","link":"#复杂度分析","children":[]},{"level":2,"title":"数组和链表","slug":"数组和链表","link":"#数组和链表","children":[]},{"level":2,"title":"栈与队列","slug":"栈与队列","link":"#栈与队列","children":[]},{"level":2,"title":"哈希表","slug":"哈希表","link":"#哈希表","children":[]},{"level":2,"title":"树","slug":"树","link":"#树","children":[{"level":3,"title":"平衡二叉树 (Adelson-Velsky and Landis Tree, AVL)","slug":"平衡二叉树-adelson-velsky-and-landis-tree-avl","link":"#平衡二叉树-adelson-velsky-and-landis-tree-avl","children":[]},{"level":3,"title":"红黑树 (Balanced Binary Search Tree, BBST)","slug":"红黑树-balanced-binary-search-tree-bbst","link":"#红黑树-balanced-binary-search-tree-bbst","children":[]},{"level":3,"title":"B 树（B Tree）","slug":"b-树-b-tree","link":"#b-树-b-tree","children":[]},{"level":3,"title":"B+ 树（B+ Tree）","slug":"b-树-b-tree-1","link":"#b-树-b-tree-1","children":[]}]},{"level":2,"title":"堆","slug":"堆","link":"#堆","children":[]},{"level":2,"title":"图","slug":"图","link":"#图","children":[]}],"git":{"updatedTime":1738750376000,"contributors":[{"name":"Clarence","username":"Clarence","email":"1154937362@qq.com","commits":1,"url":"https://github.com/Clarence"},{"name":"hanchen","username":"hanchen","email":"1154937362@qq.com","commits":2,"url":"https://github.com/hanchen"}]},"filePathRelative":"algorithm/0_base.md"}');export{d as comp,c as data};
